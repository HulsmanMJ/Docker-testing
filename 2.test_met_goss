#!/bin/bash

# See https://github.com/aelsabbahy/goss/releases for release versions
# curl -L https://github.com/aelsabbahy/goss/releases/download/_VERSION_/goss-linux-amd64 -o /usr/local/bin/goss
# chmod +rx /usr/local/bin/goss

# (optional) dgoss docker wrapper (use 'master' for latest version)
# curl -L https://raw.githubusercontent.com/aelsabbahy/goss/_VERSION_/extras/dgoss/dgoss -o /usr/local/bin/dgoss
# chmod +rx /usr/local/bin/dgoss

BUILD=$1
VERSION=$2

GOSS_LOCATION=https://github.com/aelsabbahy/goss/releases/download/v0.3.3/goss-linux-amd64
DGOSS_LOCATION=https://raw.githubusercontent.com/aelsabbahy/goss/master/extras/dgoss/dgoss
INSTALL_DIR=bin
GOSS_PATH=bin
EXIT_CODE=0

# Set your GOSS_PATH to the above location
#export GOSS_PATH

function clean {
  echo "Installatie directorie is: $INSTALL_DIR."
  if [ ! -d "$INSTALL_DIR" ] ; then
    mkdir $INSTALL_DIR
    echo "Directorie aangemaakt: $INSTALL_DIR."
  fi
  rm $INSTALL_DIR/*goss 2>/dev/null
}

function install {
  echo "Begin install goss."
  if [ -f $INSTALL_DIR/goss ]; then
    echo "File $INSTALL_DIR/goss bestaat al."
  else
    curl -L $GOSS_LOCATION -o $INSTALL_DIR/goss
  chmod +x $INSTALL_DIR/goss
  fi
  echo "Einde install goss."

  echo "Begin install dgoss."
  if [ -f $INSTALL_DIR/dgoss ]; then
    echo "File $INSTALL_DIR/dgoss bestaat al."
  else
    curl -L $DGOSS_LOCATION -o $INSTALL_DIR/dgoss
    chmod +x $INSTALL_DIR/dgoss
  fi
  echo "Einde install dgoss."
}

function start_dgoss {
  echo "Start van dgoss run." 
  $GOSS_PATH/dgoss run $BUILD:$VERSION
  #$GOSS_PATH/dgoss run -p 8081:80 nginx:1.11.10
  EXIT_CODE=$?
  echo "Einde van dgoss run, met exit code: $EXIT_CODE."
}

echo "Start 1e clean."
clean
echo "Start install."
install 
echo "Start dgoss."
start_dgoss 
#echo "Start 2e clean."
#clean
exit $EXIT_CODE
